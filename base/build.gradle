description = "Jqwik Aggregator module"

jar {
	baseName = 'jqwik'
	version = version
	manifest {
		attributes('Automatic-Module-Name': moduleName)
	}
}

publishing {

	publications {

		jqwik(MavenPublication) {
			artifactId = 'jqwik'
			from components.java
			artifact sourcesJar
			pom {
				name = 'jqwik'
				description = project.description
				url = 'https://jqwik.net/'
				licenses {
					license {
						name = 'Eclipse Public License - v 2.0'
						url = 'http://www.eclipse.org/legal/epl-v20.html'
					}
				}
				developers {
					developer {
						id = 'jlink'
						name = 'Johannes Link'
						email = 'business@johanneslink.net'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/jlink/jqwik.git'
					developerConnection = 'scm:git:git://github.com/jlink/jqwik.git'
					url = 'https://github.com/jlink/jqwik'
				}
			}
		}
	}
	repositories {
		maven {
			def ossrhUsername = project.hasProperty('ossrhUsername') ? project.ossrhUsername : ''
			def ossrhPassword = project.hasProperty('ossrhPassword') ? project.ossrhPassword : ''

			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}

			// change URLs to point to your repos, e.g. http://my.org/repo
			def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

signing {
	sign publishing.publications.jqwik
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
	options.encoding = 'UTF-8'
}

dependencies {
	api(project(":api"))
//	runtimeOnly(project(":engine"))
}
